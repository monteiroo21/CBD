cqlsh> help

Documented shell commands:
===========================
CAPTURE  CLS          COPY  DESCRIBE  EXPAND  LOGIN   SERIAL  SOURCE   UNICODE
CLEAR    CONSISTENCY  DESC  EXIT      HELP    PAGING  SHOW    TRACING

CQL help topics:
================
AGGREGATES               CREATE_KEYSPACE           DROP_TRIGGER      TEXT     
ALTER_KEYSPACE           CREATE_MATERIALIZED_VIEW  DROP_TYPE         TIME     
ALTER_MATERIALIZED_VIEW  CREATE_ROLE               DROP_USER         TIMESTAMP
ALTER_TABLE              CREATE_TABLE              FUNCTIONS         TRUNCATE 
ALTER_TYPE               CREATE_TRIGGER            GRANT             TYPES    
ALTER_USER               CREATE_TYPE               INSERT            UPDATE   
APPLY                    CREATE_USER               INSERT_JSON       USE      
ASCII                    DATE                      INT               UUID     
BATCH                    DELETE                    JSON            
BEGIN                    DROP_AGGREGATE            KEYWORDS        
BLOB                     DROP_COLUMNFAMILY         LIST_PERMISSIONS
BOOLEAN                  DROP_FUNCTION             LIST_ROLES      
COUNTER                  DROP_INDEX                LIST_USERS      
CREATE_AGGREGATE         DROP_KEYSPACE             PERMISSIONS     
CREATE_COLUMNFAMILY      DROP_MATERIALIZED_VIEW    REVOKE          
CREATE_FUNCTION          DROP_ROLE                 SELECT          
CREATE_INDEX             DROP_TABLE                SELECT_JSON  


cqlsh> CREATE KEYSPACE IF NOT EXISTS example
   ... WITH REPLICATION = { 'class': 'SimpleStrategy', 'replication_factor': 3};

Warnings :
Your replication factor 3 for keyspace example is higher than the number of nodes 1


cqlsh> USE example;


cqlsh:example> CREATE TABLE IF NOT EXISTS example.table_ex ( id int PRIMARY KEY, username TEXT, age INT );


cqlsh:example> SELECT * from table_ex
           ... ;

 id | age | username
----+-----+----------

(0 rows)


cqlsh:example> INSERT INTO table_ex(id, username, age) VALUES (1, 'joao', 20);
cqlsh:example> INSERT INTO table_ex(id, username, age) VALUES (2, 'maria', 30);
cqlsh:example> INSERT INTO table_ex(id, username, age) VALUES (3, 'afonso', 25);
cqlsh:example> SELECT * from table_ex ;

 id | age | username
----+-----+----------
  1 |  20 |     joao
  2 |  30 |    maria
  3 |  25 |   afonso

(3 rows)


cqlsh:example> UPDATE table_ex SET age = 99 WHERE id = 1;
cqlsh:example> SELECT * from table_ex ;

 id | age | username
----+-----+----------
  1 |  99 |     joao
  2 |  30 |    maria
  3 |  25 |   afonso

(3 rows)





